{
  "name": "porter",
  "info": {
    "first_deployed": "2023-09-05T18:57:59.485162-04:00",
    "last_deployed": "2023-09-05T18:57:59.485162-04:00",
    "deleted": "",
    "description": "Install complete",
    "status": "deployed"
  },
  "chart": {
    "metadata": {
      "name": "web",
      "home": "https://getporter.dev/",
      "version": "0.136.0",
      "description": "Web application that is exposed to external traffic.",
      "keywords": [
        "porter",
        "application",
        "service",
        "web"
      ],
      "icon": "https://user-images.githubusercontent.com/65516095/111255214-07d3da80-85ed-11eb-99e2-fddcbdb99bdb.png",
      "apiVersion": "v2",
      "dependencies": [
        {
          "name": "asdf-web",
          "version": "0.136.0",
          "repository": "http://chartmuseum:8080",
          "enabled": true,
          "alias": "asdf-web"
        }
      ],
      "type": "application"
    },
    "lock": null,
    "templates": null,
    "values": {
      "albIngress": {
        "annotations": null,
        "certificate_arn": null,
        "custom_paths": [],
        "enabled": false,
        "external_dns": false,
        "group_name": null,
        "group_order": null,
        "healthcheck_healthy_threshold_count": null,
        "healthcheck_interval_seconds": null,
        "healthcheck_path": null,
        "healthcheck_port": null,
        "healthcheck_protocol": null,
        "healthcheck_success_codes": null,
        "healthcheck_timeout_seconds": null,
        "healthcheck_unhealthy_threshold_count": null,
        "hosts": [],
        "scheme": "internet-facing",
        "security_groups": null,
        "target_node_labels": null,
        "target_type": "ip",
        "wafv2_acl_arn": null
      },
      "auto_deploy": true,
      "autoscaling": {
        "enabled": false,
        "maxReplicas": 10,
        "minReplicas": 1,
        "targetCPUUtilizationPercentage": 50,
        "targetMemoryUtilizationPercentage": 50
      },
      "bluegreen": {
        "disablePrimaryDeployment": false,
        "enabled": false,
        "imageTags": []
      },
      "cloudsql": {
        "additionalConnection": {
          "connectionName": "",
          "dbPort": 5432,
          "enabled": false
        },
        "connectionName": "",
        "dbPort": 5432,
        "enabled": false,
        "serviceAccountJSON": ""
      },
      "container": {
        "args": null,
        "command": null,
        "env": {
          "normal": null
        },
        "lifecycle": {
          "postStart": null,
          "preStop": null
        },
        "port": 80
      },
      "customNodePort": {
        "enabled": false,
        "port": 30000
      },
      "datadog": {
        "enabled": false
      },
      "emptyDir": {
        "enabled": false,
        "mountPath": "/mypath"
      },
      "health": {
        "livenessCommand": {
          "command": "ls -l",
          "enabled": false,
          "failureThreshold": 3,
          "initialDelaySeconds": 5,
          "periodSeconds": 5,
          "successThreshold": 1,
          "timeoutSeconds": 1
        },
        "livenessProbe": {
          "auth": {
            "enabled": false,
            "password": "",
            "username": ""
          },
          "enabled": false,
          "failureThreshold": 3,
          "httpHeaders": [],
          "initialDelaySeconds": 0,
          "path": "/livez",
          "periodSeconds": 5,
          "scheme": "HTTP",
          "successThreshold": 1,
          "timeoutSeconds": 1
        },
        "readinessProbe": {
          "auth": {
            "enabled": false,
            "password": "",
            "username": ""
          },
          "enabled": false,
          "failureThreshold": 3,
          "httpHeaders": [],
          "initialDelaySeconds": 0,
          "path": "/readyz",
          "periodSeconds": 5,
          "scheme": "HTTP",
          "successThreshold": 1,
          "timeoutSeconds": 1
        },
        "startupProbe": {
          "auth": {
            "enabled": false,
            "password": "",
            "username": ""
          },
          "enabled": false,
          "failureThreshold": 3,
          "httpHeaders": [],
          "path": "/startupz",
          "periodSeconds": 5,
          "scheme": "HTTP",
          "timeoutSeconds": 1
        }
      },
      "hostAliases": [],
      "image": {
        "pullPolicy": "Always",
        "repository": "public.ecr.aws/o1j4x7p4/hello-porter",
        "tag": "latest"
      },
      "ingress": {
        "annotations": {},
        "customTls": {
          "customTlsSecret": null,
          "enabled": false
        },
        "custom_domain": false,
        "custom_paths": [],
        "enabled": true,
        "hosts": [],
        "porter_hosts": [],
        "provider": "aws",
        "rewriteCustomPathsEnabled": true,
        "tls": true,
        "useDefaultIngressTLSSecret": false,
        "wildcard": false
      },
      "keda": {
        "cooldownPeriod": 300,
        "enabled": false,
        "fallback": {
          "failureReplicas": 6,
          "failureThreshold": 3
        },
        "hpa": {
          "scaleDown": {
            "policy": {
              "periodSeconds": 300,
              "type": "Percent",
              "value": 10
            },
            "stabilizationWindowSeconds": 300
          },
          "scaleUp": {
            "policy": {
              "periodSeconds": 300,
              "type": "Percent",
              "value": 10
            },
            "stabilizationWindowSeconds": 300
          }
        },
        "maxReplicaCount": 10,
        "minReplicaCount": 1,
        "pollingInterval": 30,
        "trigger": {
          "metricName": "",
          "metricQuery": "",
          "metricThreshold": "",
          "metricType": "AverageValue"
        },
        "triggers": []
      },
      "nodeSelector": {},
      "podLabels": {},
      "privateIngress": {
        "annotations": {},
        "clusterIssuer": "letsencrypt-prod-private",
        "custom_paths": [],
        "enabled": false,
        "hosts": [],
        "privateIngressClass": null,
        "tls": false
      },
      "pvc": {
        "enabled": false,
        "existingVolume": "",
        "mountPath": "/mypath",
        "storage": "20Gi"
      },
      "replicaCount": 1,
      "resources": {
        "requests": {
          "cpu": "100m",
          "memory": "256Mi"
        }
      },
      "service": {
        "port": 80
      },
      "serviceAccount": {
        "annotations": {},
        "create": true,
        "name": ""
      },
      "stack": {
        "enabled": false,
        "name": "",
        "revision": 0
      },
      "statefulset": {
        "enabled": false
      },
      "terminationGracePeriodSeconds": 30,
      "tolerations": [],
      "topology": {
        "enabled": false,
        "labelSelector": {
          "enabled": false,
          "matchLabels": {}
        },
        "maxSkew": null,
        "topologyKey": null,
        "whenUnsatisfiable": null
      }
    },
    "schema": null,
    "files": [
      {
        "name": ".helmignore",
        "data": "IyBQYXR0ZXJucyB0byBpZ25vcmUgd2hlbiBidWlsZGluZyBwYWNrYWdlcy4KIyBUaGlzIHN1cHBvcnRzIHNoZWxsIGdsb2IgbWF0Y2hpbmcsIHJlbGF0aXZlIHBhdGggbWF0Y2hpbmcsIGFuZAojIG5lZ2F0aW9uIChwcmVmaXhlZCB3aXRoICEpLiBPbmx5IG9uZSBwYXR0ZXJuIHBlciBsaW5lLgouRFNfU3RvcmUKIyBDb21tb24gVkNTIGRpcnMKLmdpdC8KLmdpdGlnbm9yZQouYnpyLwouYnpyaWdub3JlCi5oZy8KLmhnaWdub3JlCi5zdm4vCiMgQ29tbW9uIGJhY2t1cCBmaWxlcwoqLnN3cAoqLmJhawoqLnRtcAoqLm9yaWcKKn4KIyBWYXJpb3VzIElERXMKLnByb2plY3QKLmlkZWEvCioudG1wcm9qCi52c2NvZGUvCg=="
      },
      {
        "name": "README.md",
        "data": "IyBXZWIgU2VydmljZQoKV2ViIHNlcnZpY2VzIGFyZSBkZXBsb3llZCBmb3IgcHJvY2Vzc2VzIHRoYXQgYXJlIGNvbnN0YW50bHkgcnVubmluZywgbGlrZSBzZXJ2ZXJzLiBNb3N0IGRlcGxveW1lbnRzIHNob3VsZCBmYWxsIGludG8gdGhpcyBjYXRlZ29yeS4gWW91IGNhbiBjaG9vc2UgdG8gZGVwbG95IGEgd2ViIHNlcnZpY2UgZnJvbSB5b3VyIGdpdCByZXBvc2l0b3J5IG9yIGRvY2tlciBpbWFnZSByZWdpc3RyeS4gSWYgeW91ciBzdGFjayBpcyBkb2NrZXJpemVkLCBzcGVjaWZ5IGEgYERvY2tlcmZpbGVgIHlvdSB3YW50IHRvIGJ1aWxkIHdpdGguIElmIHlvdXIgc3RhY2sgaXMgbm90IGRvY2tlcml6ZWQsIFBvcnRlciBhdXRvbWF0aWNhbGx5IGRldGVjdHMgeW91ciBzdGFjayBhbmQgYnVpbGRzIHlvdXIgYXBwbGljYXRpb24gdXNpbmcgW0Nsb3VkIE5hdGl2ZSBCdWlsZHBhY2tzXShodHRwczovL2J1aWxkcGFja3MuaW8vKS4KCllvdSBjYW4gY2hvb3NlIHRvIGV4cG9zZSB5b3VyIGFwcGxpY2F0aW9uIHRvIGV4dGVybmFsIHRyYWZmaWMgb24gYSBjdXN0b20gZG9tYWluIC0gc2VjdXJlZCBhdXRvbWF0aWNhbGx5IGJ5IFBvcnRlciB3aXRoIFNTTCBjZXJ0aWZpY2F0ZXMgLSBvciB5b3UgY2FuIGV4cG9zZSB5b3VyIGFwcGxpY2F0aW9uIG9ubHkgdG8gaW50ZXJuYWwgdHJhZmZpYyAoaS5lLiBhY2Nlc3NpYmxlIG9ubHkgYnkgYXBwbGljYXRpb25zIHdpdGhpbiB0aGUgY2x1c3RlcikuCgpBZGRpdGlvbmFsbHksIHNlZSB0aGUgKipBZHZhbmNlZCoqIHRhYiB0byBjb25maWd1cmUgaGVhbHRoIGNoZWNrIGVuZHBvaW50cyBmb3IgemVybyBkb3duLXRpbWUgZGVwbG95bWVudHMgb3IgZW5hYmxlIHBlcnNpc3RlbmNlIG9uIHlvdXIgZGVwbG95bWVudHMu"
      },
      {
        "name": "form.yaml",
        "data": ""
      },
      {
        "name": "upgrade.yaml",
        "data": "dXBncmFkZV9ub3RlczoKICAtIHByZXZpb3VzOiB2MC4xMS4wCiAgICB0YXJnZXQ6IHYwLjEyLjAKICAgIG5vdGU6IHwKICAgICAgYHYwLjExLjBgIGFkZGVkIHN1cHBvcnQgZm9yIGNvbmZpZ3VyaW5nIHRoZSB0aW1lIGludGVydmFsIG9mIHRoZSByZWFkaW5lc3MgcHJvYmUuIFRoaXMgc2V0cyB0aGUgcGVyaW9kIGJldHdlZW4gc3VjY2Vzc2l2ZSByZWFkaW5lc3MgcHJvYmUgcXVlcmllcyBvbiB0aGUgaGVhbHRoIGNoZWNrIGVuZHBvaW50LiBUaGlzIHVwZGF0ZSBpcyBiYWNrd2FyZHMtY29tcGF0aWJsZS4KICAtIHByZXZpb3VzOiB2MC4xMi4wCiAgICB0YXJnZXQ6IHYwLjEzLjAKICAgIG5vdGU6IHwKICAgICAgYHYwLjEzLjBgIGFkZGVkIHN1cHBvcnQgZm9yIGRpc3BsYXlpbmcgdGhlIHJldmlzaW9uIG51bWJlcnMgYXR0YWNoZWQgdG8gZWFjaCBwb2QgaW4gdGhlIFBvcnRlciBkYXNoYm9hcmQsIGJ5IHBhc3NpbmcgdGhlIHJldmlzaW9uIG51bWJlciB0byB0aGUgcG9kIG1ldGFkYXRhLiBUaGlzIHVwZGF0ZSBpcyBiYWNrd2FyZHMtY29tcGF0aWJsZS4KICAtIHByZXZpb3VzOiB2MC4xMy4wCiAgICB0YXJnZXQ6IHYwLjE0LjAKICAgIG5vdGU6IHwKICAgICAgYHYwLjE0LjBgIGZpeGVkIHRoZSBwYXJzaW5nIGlzc3VlIG9uIHRoZSBgUE9SVEVSX1BPRF9JTUFHRV9UQUdgIHZhcmlhYmxlIHRoYXQncyBpbmplY3RlZCBpbnRvIHRoZSBjb250YWluZXIuCiAgLSBwcmV2aW91czogdjAuMzkuMAogICAgdGFyZ2V0OiB2MC40MC4wCiAgICBub3RlOiB8CiAgICAgICoqV0FSTklORyoqOiB0aGlzIG1heSBub3QgYmUgYmFja3dhcmRzIGNvbXBhdGlibGUgd2l0aCB5b3VyIGNvbmZpZ3VyYXRpb24uCgogICAgICBgdjAuNDAuMGAgZml4ZXMgYW4gaXNzdWUgd2hlcmUgbm90IHNldHRpbmcgdGhlIGxpdmVuZXNzIHByb2JlIGhlYWx0aCBjaGVjayBwcmV2ZW50cyBvdGhlciBoZWFsdGggY2hlY2tzIGZyb20gYmVpbmcgZW5hYmxlZC4gSWYgeW91IGhhdmUgaGVhbHRoIGNoZWNrcyBlbmFibGVkLCBwbGVhc2UgZG91YmxlLWNoZWNrIHRoZSAqKkFkdmFuY2VkKiogdGFiIGFmdGVyIHVwZ3JhZGluZyBhbmQgbWFrZSBzdXJlIHlvdXIgaGVhbHRoIGNoZWNrcyBhcmUgc2V0IGNvcnJlY3RseS4K"
      },
      {
        "name": "validate.json",
        "data": ""
      }
    ]
  },
  "config": {
    "auto_deploy": true,
    "autoscaling": {
      "enabled": false
    },
    "clusterId": 1,
    "container": {
      "env": {
        "normal": null
      },
      "lifecycle": {},
      "port": 80
    },
    "currentCluster": {
      "service": {
        "is_aws": false,
        "is_do": false,
        "is_gcp": false
      }
    },
    "health": {
      "livenessProbe": {
        "enabled": false
      },
      "readinessProbe": {
        "enabled": false
      },
      "startupProbe": {
        "enabled": false
      }
    },
    "image": {
      "repository": "nginx",
      "tag": "latest"
    },
    "ingress": {
      "annotations": {},
      "custom_domain": false,
      "enabled": false,
      "provider": ""
    },
    "namespace": "default",
    "replicaCount": 1,
    "resources": {
      "requests": {
        "cpu": "100m",
        "memory": "256Mi"
      }
    },
    "showStartCommand": true,
    "terminationGracePeriodSeconds": 30
  },
  "manifest": "---\n# Source: web/templates/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: porter-web\n  labels:\n    helm.sh/chart: web-0.136.0\n    app.kubernetes.io/name: web\n    app.kubernetes.io/instance: porter\n    app.kubernetes.io/version: \"1.25.0\"\n    app.kubernetes.io/managed-by: Helm\n---\n# Source: web/templates/service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: porter-web\n  labels:\n    helm.sh/chart: web-0.136.0\n    app.kubernetes.io/name: web\n    app.kubernetes.io/instance: porter\n    app.kubernetes.io/version: \"1.25.0\"\n    app.kubernetes.io/managed-by: Helm\nspec:\n  \n  type: ClusterIP\n  \n  ports:\n    - port: 80\n      targetPort: http\n      protocol: TCP\n      name: http\n  selector:\n    app.kubernetes.io/name: web\n    app.kubernetes.io/instance: porter\n---\n# Source: web/templates/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: porter-web\n  labels:\n    helm.sh/chart: web-0.136.0\n    app.kubernetes.io/name: web\n    app.kubernetes.io/instance: porter\n    app.kubernetes.io/version: \"1.25.0\"\n    app.kubernetes.io/managed-by: Helm\nspec:\n  replicas: 1\n  \n  \n  selector:\n    matchLabels:\n      app.kubernetes.io/name: web\n      app.kubernetes.io/instance: porter\n  template:\n    metadata:\n      annotations:\n        helm.sh/revision: \"1\"\n      labels:\n        app.kubernetes.io/name: web\n        app.kubernetes.io/instance: porter\n        porter.run/application-name: \"porter\"\n    spec:\n      serviceAccountName: porter-web\n      terminationGracePeriodSeconds: 30\n      hostAliases:\n        []\n      securityContext:\n        null\n      containers:\n        - name: web\n          securityContext:\n            null\n          image: \"nginx:latest\"\n          imagePullPolicy: Always\n          ports:\n            - name: http\n              containerPort: 80\n              protocol: TCP\n          \n          \n          \n          \n          resources:\n            requests:\n              cpu: 100m\n              memory: 256Mi\n            limits:\n              memory: 256Mi\n          \n          \n          env:\n            # Porter default environment variables\n            - name: PORTER_RESOURCES_RAM\n              value: \"256Mi\"\n            - name: PORTER_RESOURCES_CPU\n              value: \"100m\"\n            - name: PORTER_RESOURCES_REPLICAS\n              value: \"1\"\n            - name: PORTER_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: PORTER_POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: PORTER_POD_IP\n              valueFrom:\n                fieldRef:\n                  fieldPath: status.podIP\n            - name: PORTER_POD_IMAGE_TAG\n              value: \"latest\"\n            - name: PORTER_POD_REVISION\n              value: \"1\"\n            \n          \n          \n      tolerations:\n        - key: \"removable\"\n          operator: \"Equal\"\n          value: \"true\"\n          effect: \"NoSchedule\"\n",
  "hooks": [
    {
      "name": "porter-web-test-connection",
      "kind": "Pod",
      "path": "web/templates/tests/test-connection.yaml",
      "manifest": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"porter-web-test-connection\"\n  labels:\n    helm.sh/chart: web-0.136.0\n    app.kubernetes.io/name: web\n    app.kubernetes.io/instance: porter\n    app.kubernetes.io/version: \"1.25.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test-success\nspec:\n  containers:\n    - name: wget\n      image: busybox\n      command: ['wget']\n      args: ['porter-web:80']\n  restartPolicy: Never",
      "events": [
        "test"
      ],
      "last_run": {
        "started_at": "",
        "completed_at": "",
        "phase": ""
      }
    }
  ],
  "version": 1,
  "namespace": "porter-stack-a"
}
