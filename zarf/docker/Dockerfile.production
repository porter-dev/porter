# FROM golang:1.20 as server-build
# WORKDIR /porter
# ARG version=production
# ARG CGO_ENABLED=0
# COPY go.mod go.sum .
# COPY /cmd ./cmd
# COPY /internal ./internal
# COPY /api ./api
# COPY /scripts ./scripts
# COPY /provisioner ./provisioner
# COPY /pkg ./pkg
# RUN go build -ldflags="-w -s -X 'main.Version=${version}'" -a -o ./bin/app ./cmd/app
# RUN go build -ldflags '-w -s' -a -o ./bin/migrate ./cmd/migrate

# FROM node:16 as ui-build
# WORKDIR /webpack
# COPY ./dashboard ./
# RUN npm install -g npm@8.1
# RUN npm i --legacy-peer-deps
# ENV NODE_ENV=production
# RUN npm run build

FROM debian:bullseye-slim as runner
WORKDIR /porter
COPY bin/app /porter/
COPY bin/migrate /porter/
COPY --from=ui-build /webpack/build /porter/static

# CMD /porter/migrate && /porter/app
